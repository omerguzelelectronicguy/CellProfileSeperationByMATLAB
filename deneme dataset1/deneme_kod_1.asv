function results = myimfcn(im)
%Image Processing Function
%
% IM      - Input image.
% RESULTS - A scalar structure with the processing results.
%

%--------------------------------------------------------------------------
% Auto-generated by imageBatchProcessor App. 
%
% When used by the App, this function will be called for every input image
% file automatically. IM contains the input image as a matrix. RESULTS is a
% scalar structure containing the results of this processing function.
%
%--------------------------------------------------------------------------

% Replace the sample below with your code----------------------------------
im=im(1:200,1:300);

g = double(im); % Normalized Image % Normalized Image
n = double(im.*2);
c = 0.20; % Constant
l = c*log(1 + (g)); % Log Transform
a= edge(l,'Canny',0.15,3);
b=edge(l,'Canny');


results.l =l;
results.n =n;
results.g =g;
results.a =a;
results.b =b;


f1 = imfill(b,'holes');
se = strel('line',11,0);
se0 = strel('line',1,90);

d1 = imdilate(a,[se se0]);
f2 = imfill(d1, 'holes');
e = imerode(f2,[se se0]);

aaa = watershed(a);
imshow()
gmag = imgradient(l);
L = watershed(gmag);
Lrgb = label2rgb(L);
se = strel('disk',20);
Io = imopen(im,se);
Ie = imerode(im,se);
Iobr = imreconstruct(Ie,im);
Ioc = imclose(Io,se);
Iobrd = imdilate(Iobr,se);
Iobrcbr = imreconstruct(imcomplement(Iobrd),imcomplement(Iobr));
Iobrcbr = imcomplement(Iobrcbr);
fgm = imregionalmax(Iobrcbr);
I2 = labeloverlay(im,fgm);
se2 = strel(ones(5,5));
fgm2 = imclose(fgm,se2);
fgm3 = imerode(fgm2,se2);
fgm4 = bwareaopen(fgm3,20);
I3 = labeloverlay(im,fgm4);
bw = imbinarize(Iobrcbr);
D = bwdist(bw);
DL = watershed(D);
bgm = DL == 0;
gmag2 = imimposemin(gmag, bgm | fgm4);
L = watershed(gmag2);
labels = imdilate(L==0,ones(3,3)) + 2*bgm + 3*fgm4;
I4 = labeloverlay(im,labels);
Lrgb = label2rgb(L,'jet','w','shuffle');
himage = imshow(Lrgb);
himage.AlphaData = 0.3;

results.d1 =d1;
results.e =e;
results.f2 =f2;
results.f1 =f1;
results.last=gmag;
%-------------



%--------------------------------------------------------------------------
